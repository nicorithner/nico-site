export const projects = [
  {
    id: 1,
    title: 'Portfolio',
    image: '../images/portfolio/pt-home.png',
    category: "Frontend - Personal Project - Solo Project",
    summary: 'A Rect.js application. A portfolio to highlight my recent work',
    github: 'https://github.com/nicorithner/portfolio/blob/main/README.md',
    link: '/projects/1',
    text1: "I created this project because of a recommendation by my career coach. I had been interested in learning React and decided to go this route. ",
    text1b: "Overall this was a great experience and I look forward to farther iterations on this project. For resources I used different sources, including a course I purchased, articles, and the docs. " ,
    text1c: "What gave me confidence to tackle this job was having access to Frontend developer friends who didn't hesitate to help and provide lessons. Among them are Stacey Potten, Nathan Darrington, Nicole Gooden",
    text2: "Not hardcoding each project was the one of the challenges I faced. I learned to set up components and to style them. I had to iterate over a source file to extra each projects details. ",
    text2b: "This was a great first exposure to the reusability of React components. This style needs refactoring but I am happy with this iteration 1 of the project.",
    text2c: "",
    text3: "",
    banner: '../images/portfolio/pt-banner.png',
    photocredit: '',
    pic1: '../images/portfolio/pt-projects.png',
    pic2: '../images/portfolio/pt-code.png',
    pic3: '../images/portfolio/pt-nav.png',
  },
  {
    id: 2,
    title: 'Sweater Weather',
    image: 'images/sweather.png',
    category: "Backend - Turing's School Project - Solo project",
    summary: 'A Rails server that consumes and serves Restful APIs. RSpec test suite',
    github: 'https://github.com/nicorithner/Sweater_weather/blob/main/README.md',
    link:'/projects/2',
    text1: "Sweater Weather is a Turing Module 3 project that provides the developer with a series of wireframes and instructions to produce endpoints that the project front-end developers (ficticious) could use. Using request such as 'GET /api/v1/forecast?location=denver,co' the app can retrieve the weather for a city, retrieve a background image for that city, register and user, log an existing user and plan a road trip (duration of the trip and weather at arrival)",
    text1b: "Using request such as 'GET /api/v1/forecast?location=denver,co' the app can retrieve the weather for a city, retrieve a background image for that city, register and user, log an existing user and plan a road trip (duration of the trip and weather at arrival)",
    text2: "The projects asks for T.D.D. (test driven development) to develop the project functionality. Gems such as simplecov, webmock, and vcr, among others help us drive this process. The testing requirements expect 'sad path' path testing along with functionality.",
    text2b: "This means to test for when the user doesn't do what is expected. For example, entering the wrong password or omitting the confirmation password.",
    text3: "",
    banner: '../images/rw-banner.png',
    photocredit: 'Photo by Todd Diemer',
    pic1: '../images/sw-info.png',
    pic2: '../images/sw-api.png',
    pic3: '../images/sw-json.png',
  },
  {
    id: 3,
    title: 'Rails Engine',
    image: '../images/routes.png',
    category: "Backend - Turing's School Project - Solo project",
    summary: 'A Rails server that serves Restful APIs to a Rails e-commerce app. RSpec test suite',
    github: 'https://github.com/nicorithner/rails_engine/blob/main/README.md',
    link: '/projects/3',
    text1: "The scenario for this exercise was that one is working for a company developing an E-Commerce Application. The team is working in a service-oriented architecture, meaning the front and back ends of this application are separate and communicate via APIs. The job is to expose the data that powers the site through an API that the front end will consume.",
    text2: "The 'Rails Engine/ Rails Drive' project is an exercise on exposing APIs. The exercise requires using TDD to drive the process and we were provided an spec harness test in 'Rails Drive'. The most challenging part was figuring out how to complete some of these processes without the proper know-how (no lessons provided). This made things very challenging but allowed me to expose areas that need strengthening.",
    text3: "",
    banner: '../images/re-banner.png',
    photocredit: 'Photo by Nathan Dumlao',
    pic1: '../images/rails-engine/re-test.png',
    pic2: '../images/rails-engine/re-schema1.png',
    pic3: '../images/rails-engine/re-query.png',
  },
  {
    id: 4,
    title: 'Never Alone',
    image: '../images/nalone.png',
    category: "Backend - Turing's School Project - Group project",
    summary: 'A Rails server that consumes and serves GraphQL APIs to a React Native app. RSpec test suite',
    github: 'https://github.com/never-alone-turing/never_alone_be/blob/main/README.md',
    link: '/projects/4',
    text1: "This is the backend engine that drives the Never Alone Application. Never Alone is an intuitive application used as an easy and non-intrusive way to check in on friends and family. Simply select a time to set up a check in with a loved one and when the due date for that check in arrives your loved one will simply respond to the request within a timeframe that was agreed upon by everyone involved. The 'caretaker' will then receive a notification that everything is fine.",
    text2: "In order for our frontend team to connect to the database we used GraphQL to construct our APIs. The singular endpoint is 'https://never-alone-backend.herokuapp.com/graphql' There are four tables in the database: users, groups, checkins, and a joint-table called user_groups. Each table follows the same pattern of queries and mutations.",
    text3: "",
    banner: '../images/na-banner.png',
    photocredit: 'Photo by Skiathos Greece',
    pic1: '../images/never-alone/ne-info.png',
    pic2: '../images/never-alone/ne-graphql.png',
    pic3: '../images/never-alone/ne-mobile.png',
  },
]
